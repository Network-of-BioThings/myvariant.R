## subset variants that appear in all VCF
getCommonVariants <- function(df, common.variants){
subset(df, Variant %in% common.variants)
}
## subset variants not in common list
getUncommonVariants <- function(df, common.variants){
subset(df, !(df$Variant %in% common.variants))
}
vars <- lapply(anno.files, getVars)
anno.files
library(IRanges)
library(VariantAnnotation)
library(BiocParallel)
## compare variants between two outputs
multicoreParam <- MulticoreParam(workers=4)
#setwd("~/avera/vcf/mRNA_Brain")
setwd("/Users/Adam/avera/vcf/T47D_vcf_files/")
#setwd("/Users/Adam/avera/vcf/vcf")
files <- paste(getwd(), list.files(getwd()), sep="/")
sample.names <- gsub(".vcf", "", list.files(getwd()))
anno.files <- files[!grepl(".gz", files)]
options(warn=-1)
getVars <- function(vcf){
VA <- readVcf(vcf, genome="hg19")
coverage <- info(VA)[,c("DP", "QD")]
geno <- geno(VA)$AD
row.names(geno) <- NULL
coverage$AD <- geno[,1] %>% lapply(as.numeric) %>% List
Vcf <- DataFrame(getVcf(vcf))
df <- cbind(Vcf, coverage)
snps <- getSnps(df)
snps$Variant <- snps$query
snps[, c("CHROM", "POS", "REF", "ALT", "FILTER", "INFO", "query", "type")] <- NULL
rownames(snps) <- NULL
snps
}
## filter those with AD ref:alt < 0.1 or > 0.9
filterVariants <- function(df){
df <- subset(df, QD > 2)
#df <- subset(df, DP > 10)
#df <- subset(df, lapply(AD, function(i) i[2]/sum(i) > 0.1))
df
}
## subset variants that appear in all VCF
getCommonVariants <- function(df, common.variants){
subset(df, Variant %in% common.variants)
}
## subset variants not in common list
getUncommonVariants <- function(df, common.variants){
subset(df, !(df$Variant %in% common.variants))
}
vars <- lapply(anno.files, getVars)
vars.filtered <- lapply(vars, filterVariants)
variants <- lapply(vars.filtered[2:length(vars.filtered)], function(i) i$Variant)
common <- Reduce(intersect, variants)
common.vars <- lapply(vars.filtered, getCommonVariants, common)
uncommon.vars <- lapply(vars.filtered, getUncommonVariants, common)
mean.DP <- sapply(vars.filtered, function(i) mean(i$DP))
mean.DP.common <- sapply(common.vars, function(i) mean(i$DP))
mean.DP.uncommon <- sapply(uncommon.vars, function(i) mean(i$DP))
mean.QD <- sapply(vars.filtered, function(i) mean(i$QD))
mean.QD.common <- sapply(common.vars, function(i) mean(i$QD))
mean.QD.uncommon <- sapply(uncommon.vars, function(i) mean(i$QD))
## table showing mean depth of common variants, uncommon, and total (unfiltered)
report <- data.frame(Sample=sample.names, Mean_Depth=mean.DP.unfiltered, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD.unfiltered, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_Total=sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[1]]$Variant))/nrow(i)))
## variants shared by i=1...length(vars) samples
variant.counts <- vars.filtered %>% lapply(. %$% Variant %>% unique) %>% unlist %>% table %>% data.frame
common.vars <- lapply(vars.filtered, getCommonVariants, common)
uncommon.vars <- lapply(vars.filtered, getUncommonVariants, common)
mean.DP <- sapply(vars.filtered, function(i) mean(i$DP))
mean.DP.common <- sapply(common.vars, function(i) mean(i$DP))
mean.DP.uncommon <- sapply(uncommon.vars, function(i) mean(i$DP))
mean.QD <- sapply(vars.filtered, function(i) mean(i$QD))
mean.QD.common <- sapply(common.vars, function(i) mean(i$QD))
mean.QD.uncommon <- sapply(uncommon.vars, function(i) mean(i$QD))
## table showing mean depth of common variants, uncommon, and total (unfiltered)
report <- data.frame(Sample=sample.names, Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_Total=sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[1]]$Variant))/nrow(i)))
## variants shared by i=1...length(vars) samples
variant.counts <- vars.filtered %>% lapply(. %$% Variant %>% unique) %>% unlist %>% table %>% data.frame
names(variant.counts) <- c('variant', 'count')
shared <- lapply(seq(length(vars.filtered)), function(i) nrow(subset(variant.counts, count == i)))
## pairwise fraction of shared variants
pairwise.shared <- data.frame(sapply(vars.filtered, function(i) sapply(vars.filtered, function(j) length(intersect(i$Variant, j$Variant))/length(j$Variant))))
row.names(pairwise.shared) <- sample.names
colnames(pairwise.shared) <- sample.names
report
pairwise.shared
length(common)
lapply(vars.filtered, nrow)
pairwise.shared
setwd("/Users/Adam/avera/vcf/T47D_vcf_files/")
#setwd("/Users/Adam/avera/vcf/vcf")
files <- paste(getwd(), list.files(getwd()), sep="/")
sample.names <- gsub(".vcf", "", list.files(getwd()))
anno.files <- files[!grepl(c("Access", ".gz"), files)]
anno.files
vars <- lapply(anno.files, getVars)
vars.filtered <- lapply(vars, filterVariants)
variants <- lapply(vars.filtered[2:length(vars.filtered)], function(i) i$Variant)
common <- Reduce(intersect, variants)
common.vars <- lapply(vars.filtered, getCommonVariants, common)
uncommon.vars <- lapply(vars.filtered, getUncommonVariants, common)
mean.DP <- sapply(vars.filtered, function(i) mean(i$DP))
mean.DP.common <- sapply(common.vars, function(i) mean(i$DP))
mean.DP.uncommon <- sapply(uncommon.vars, function(i) mean(i$DP))
mean.QD <- sapply(vars.filtered, function(i) mean(i$QD))
mean.QD.common <- sapply(common.vars, function(i) mean(i$QD))
mean.QD.uncommon <- sapply(uncommon.vars, function(i) mean(i$QD))
## table showing mean depth of common variants, uncommon, and total (unfiltered)
report <- data.frame(Sample=sample.names, Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_Total=sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[1]]$Variant))/nrow(i)))
## variants shared by i=1...length(vars) samples
variant.counts <- vars.filtered %>% lapply(. %$% Variant %>% unique) %>% unlist %>% table %>% data.frame
names(variant.counts) <- c('variant', 'count')
shared <- lapply(seq(length(vars.filtered)), function(i) nrow(subset(variant.counts, count == i)))
## pairwise fraction of shared variants
pairwise.shared <- data.frame(sapply(vars.filtered, function(i) sapply(vars.filtered, function(j) length(intersect(i$Variant, j$Variant))/length(j$Variant))))
row.names(pairwise.shared) <- sample.names
colnames(pairwise.shared) <- sample.names
## table showing mean depth of common variants, uncommon, and total (unfiltered)
report <- data.frame(Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_Total=sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[1]]$Variant))/nrow(i)))
## variants shared by i=1...length(vars) samples
variant.counts <- vars.filtered %>% lapply(. %$% Variant %>% unique) %>% unlist %>% table %>% data.frame
sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[1]]$Variant))/nrow(i))
pairwise.shared <- data.frame(sapply(vars.filtered, function(i) sapply(vars.filtered, function(j) length(intersect(i$Variant, j$Variant))/length(j$Variant))))
pairwise.shared
anno.files
length(common)
variants <- lapply(vars.filtered[1:2], function(i) i$Variant)
common <- Reduce(intersect, variants)
length(common)
setwd("~/avera/vcf/T47D_vcf_5_28")
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
source('~/sulab/repos/myvariant.R/R/utils.R')
setwd("/Users/Adam/avera/vcf/T47D_vcf_5_28/")
#setwd("/Users/Adam/avera/vcf/vcf")
files <- paste(getwd(), list.files(getwd()), sep="/")
sample.names <- gsub(".vcf", "", list.files(getwd()))
anno.files <- files[!grepl(c("Access", ".gz"), files)]
anno.files
library(IRanges)
library(VariantAnnotation)
library(BiocParallel)
## compare variants between two outputs
multicoreParam <- MulticoreParam(workers=4)
#setwd("~/avera/vcf/mRNA_Brain")
setwd("/Users/Adam/avera/vcf/T47D_vcf_5_28/")
#setwd("/Users/Adam/avera/vcf/vcf")
files <- paste(getwd(), list.files(getwd()), sep="/")
sample.names <- gsub(".vcf", "", list.files(getwd()))
anno.files <- files[!grepl(c("Access", ".gz"), files)]
options(warn=-1)
getVars <- function(vcf){
VA <- readVcf(vcf, genome="hg19")
coverage <- info(VA)[,c("DP", "QD")]
geno <- geno(VA)$AD
row.names(geno) <- NULL
coverage$AD <- geno[,1] %>% lapply(as.numeric) %>% List
Vcf <- DataFrame(getVcf(vcf))
df <- cbind(Vcf, coverage)
snps <- getSnps(df)
snps$Variant <- snps$query
snps[, c("CHROM", "POS", "REF", "ALT", "FILTER", "INFO", "query", "type")] <- NULL
rownames(snps) <- NULL
snps
}
## filter those with AD ref:alt < 0.1 or > 0.9
filterVariants <- function(df){
df <- subset(df, QD > 2)
#df <- subset(df, DP > 10)
#df <- subset(df, lapply(AD, function(i) i[2]/sum(i) > 0.1))
df
}
## subset variants that appear in all VCF
getCommonVariants <- function(df, common.variants){
subset(df, Variant %in% common.variants)
}
## subset variants not in common list
getUncommonVariants <- function(df, common.variants){
subset(df, !(df$Variant %in% common.variants))
}
vars.filtered <- lapply(anno.files, getVars)
anno.files
anno.files[c(1,3,4)]
library(IRanges)
library(VariantAnnotation)
library(BiocParallel)
## compare variants between two outputs
multicoreParam <- MulticoreParam(workers=4)
#setwd("~/avera/vcf/mRNA_Brain")
setwd("/Users/Adam/avera/vcf/T47D_vcf_5_28/")
#setwd("/Users/Adam/avera/vcf/vcf")
files <- paste(getwd(), list.files(getwd()), sep="/")
sample.names <- gsub(".vcf", "", list.files(getwd()))
anno.files <- files[!grepl(c("Access", ".gz"), files)]
options(warn=-1)
getVars <- function(vcf){
VA <- readVcf(vcf, genome="hg19")
coverage <- info(VA)[,c("DP", "QD")]
geno <- geno(VA)$AD
row.names(geno) <- NULL
coverage$AD <- geno[,1] %>% lapply(as.numeric) %>% List
Vcf <- DataFrame(getVcf(vcf))
df <- cbind(Vcf, coverage)
snps <- getSnps(df)
snps$Variant <- snps$query
snps[, c("CHROM", "POS", "REF", "ALT", "FILTER", "INFO", "query", "type")] <- NULL
rownames(snps) <- NULL
snps
}
## filter those with AD ref:alt < 0.1 or > 0.9
filterVariants <- function(df){
df <- subset(df, QD > 2)
#df <- subset(df, DP > 10)
#df <- subset(df, lapply(AD, function(i) i[2]/sum(i) > 0.1))
df
}
## subset variants that appear in all VCF
getCommonVariants <- function(df, common.variants){
subset(df, Variant %in% common.variants)
}
## subset variants not in common list
getUncommonVariants <- function(df, common.variants){
subset(df, !(df$Variant %in% common.variants))
}
vars.filtered <- lapply(anno.files, getVars)
variants <- lapply(vars.filtered[c(1,3,4)], function(i) i$Variant)
common <- Reduce(intersect, variants)
common.vars <- lapply(vars.filtered, getCommonVariants, common)
uncommon.vars <- lapply(vars.filtered, getUncommonVariants, common)
mean.DP <- sapply(vars.filtered, function(i) mean(i$DP))
mean.DP.common <- sapply(common.vars, function(i) mean(i$DP))
mean.DP.uncommon <- sapply(uncommon.vars, function(i) mean(i$DP))
mean.QD <- sapply(vars.filtered, function(i) mean(i$QD))
mean.QD.common <- sapply(common.vars, function(i) mean(i$QD))
mean.QD.uncommon <- sapply(uncommon.vars, function(i) mean(i$QD))
## table showing mean depth of common variants, uncommon, and total (unfiltered)
#Sample=sample.names,
report <- data.frame(Sample=sample.names, Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_Total=sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[2]]$Variant))/nrow(i)))
## variants shared by i=1...length(vars) samples
variant.counts <- vars.filtered %>% lapply(. %$% Variant %>% unique) %>% unlist %>% table %>% data.frame
names(variant.counts) <- c('variant', 'count')
shared <- lapply(seq(length(vars.filtered)), function(i) nrow(subset(variant.counts, count == i)))
## pairwise fraction of shared variants
pairwise.shared <- data.frame(sapply(vars.filtered, function(i) sapply(vars.filtered, function(j) length(intersect(i$Variant, j$Variant))/length(j$Variant))))
row.names(pairwise.shared) <- sample.names
colnames(pairwise.shared) <- sample.names
pairwise.shared
sample.names
mean.DP
mean.DP.common
mean.DP.uncommon
mean.QD
report <- DataFrame(Sample=sample.names, Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_Total=sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[2]]$Variant))/nrow(i)))
length(mean.QD)
mean.QD.common
mean.QD.uncommon
sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[2]]$Variant))/nrow(i))
Percent_in_total <- sapply(vars.filtered, function(i) 100*nrow(subset(i, Variant %in% vars.filtered[[2]]$Variant))/nrow(i))
report <- DataFrame(Sample=sample.names, Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total)
report <- data.frame(Sample=sample.names, Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total)
?data.frame
report <- DataFrame(Sample=sample.names, Mean_Depth=mean, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total, check.rows=F)
report <- data.frame(Sample=sample.names, Mean_Depth=mean.DP, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total)
report
length(common)
lapply(vars.filtered, nrows)
lapply(vars.filtered, nrow)
lapply(uncommon.vars. nrow)
lapply(uncommon.vars, nrow)
t47d <- read.csv("/Users/Adam/Downloads/t47d_mutations.csv", sep=",", stringsAsFactors=FALSE)
t47d
head(t47d)
mut <- t47d$CDS.Mutation
pos <- t47d$Position
pos
mut
snps <- grepl(">", "mut")
snps
snps <- mut[grepl(">", mut)]
snps
strsplit(snps, ">")
strsplit(snps, ">") %>% grep("A")
?grep
strsplit(snps, ">") %>% lapply(grep("A"))
strsplit(snps, ">") %>% regexpr("ATCG", perl=T)
strsplit(snps, ">") %>% regexpr("ATCG")
a <- "c.24345G>T"
a
gregexpr('[A-Z]')
gregexpr('[A-Z]', a)
regexpr('[A-Z]', a)
regexpr('[:upper:]', a)
gregexpr('[:upper:]', a)
gregexpr('[:upper:]', a, perl=T)
grep('[:upper:]', a, perl=T)
regexpr('[:upper:]', a, perl=T)
snps
gsub("c\\.[0-9].", "", snps[1])
gsub("c\\.[1-9].", "", snps[1])
gsub("c\\.[0-9]+", "", snps[1])
gsub("c\\.[0-9]+", "", snps)
pos
strsplit(pos, "..")
strsplit("..", pos)
pos
?strsplit
strsplit(pos, "..")
pos
strsplit(pos, "\\..")
strsplit(pos, "\\..")[1]
lapply(pos, strsplit, "\\..")
sapply(pos, strsplit, "\\..")
sapply(pos, strsplit, "\\..")
sapply(pos, function(i) strsplit(i, "\\..")[1])
lapply(pos, function(i) strsplit(i, "\\..")[1])
lapply(pos, function(i) strsplit(i, "\\..")[[1]][1])
lapply(pos, function(i) strsplit(i, "\\..")[[1]][1]) %>% gsub(":", ":g.")
lapply(pos, function(i) strsplit(i, "\\..")[[1]][1]) %>% lapply(gsub(":", ":g."))
library(magrittr)
lapply(pos, function(i) strsplit(i, "\\..")[[1]][1]) %>% gsub(":", ":g.")
chrom.start <- lapply(pos, function(i) strsplit(i, "\\..")[[1]][1])
gsub(":", ":g.", chrom.start)
variant <- paste("chr", gsub(":", ":g.", chrom.start), change, sep="")
t47d <- read.csv("/Users/Adam/Downloads/t47d_mutations.csv", sep=",", stringsAsFactors=FALSE)
mut <- t47d$CDS.Mutation
pos <- t47d$Position
snps <- grepl(">", "mut")
change <- gsub("c\\.[0-9]+", "", snps)
chrom.start <- lapply(pos, function(i) strsplit(i, "\\..")[[1]][1])
variant <- paste("chr", gsub(":", ":g.", chrom.start), change, sep="")
variant
change
snps
mut
grepl(">", mut)
snps <- mut[grepl(">", mut)]
snps
snps <- mut[grepl(">", mut)]
change <- gsub("c\\.[0-9]+", "", snps)
chrom.start <- lapply(pos, function(i) strsplit(i, "\\..")[[1]][1])
variant <- paste("chr", gsub(":", ":g.", chrom.start), change, sep="")
variant
snpIds <- paste("chr", gsub(":", ":g.", chrom.start), change, sep="")
indels <- mut[!grepl(">", mut)]
indels
length(mut)
indelPos <- pos[!grepl(">", mut)]
indelPos
snpIds
t47d <- read.csv("/Users/Adam/Downloads/t47d_mutations.csv", sep=",", stringsAsFactors=FALSE)
mut <- t47d$CDS.Mutation
pos <- t47d$Position
snps <- mut[grepl(">", mut)]
change <- gsub("c\\.[0-9]+", "", snps)
chrom.start <- lapply(pos, function(i) strsplit(i, "\\..")[[1]][1])
cosmicIds <- paste("chr", gsub(":", ":g.", chrom.start), change, sep="")
Percent_known <- sapply(vars.filtered, function(i) 100*length(intersect(i$Variant, cosmicIds))/length(cosmicIds))
report <- data.frame(Sample=sample.names, Mean_Depth=mean.DP, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total, Percent_known=Percent_know)
report <- data.frame(Sample=sample.names, Mean_Depth=mean.DP, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total, Percent_known=Percent_known)
report
pos
vars.filtered[[1]]$pos
POS <- paste("chr", gsub("\\..", "-", pos), sep="")
POS
cosmicPos <- paste("chr", gsub("\\..", "-", pos), sep="")
Percent_known <- sapply(vars.filtered, function(i) 100*length(intersect(i$pos, cosmicPos))/length(cosmicPos))
report <- data.frame(Sample=sample.names, Mean_Depth=mean.DP, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total, Percent_known=Percent_known)
report
vars.filtered[[4]]$pos
intersect(cosmicPos, vars.filtered[[4]]$pos)
intersect(cosmicPos, vars.filtered[[3]]$pos)
report
intersect(cosmicPos, vars.filtered[[2]]$pos)
cosmicPos
intersect(vars.filtered[[2]]$pos, cosmicPos)
length(cosmicPos)
Percent_known <- sapply(vars.filtered, function(i) length(intersect(i$pos, cosmicPos))/length(cosmicPos))
report <- data.frame(Sample=sample.names, Mean_Depth=mean.DP, Mean_Depth_common=mean.DP.common, Mean_Depth_uncommon=mean.DP.uncommon,
Mean_QD=mean.QD, Mean_QD_common=mean.QD.common, Mean_QD_uncommon=mean.QD.uncommon,
Percent_in_total=Percent_in_total, Percent_known=Percent_known)
report
intersect(vars.filtered[[2]]$pos, cosmicPos)
q <- intersect(vars.filtered[[2]]$pos, cosmicPos)
query(q)
library(mygene)
query(q)
intersect(vars.filtered[[2]]$pos, cosmicPos)
q <- c("9:83799212-83799212", "11:212679-212679")
q
query(q)
queryMany(q)
mg <- MyGene()
metadata(mg)
queryMany(q, scopes="exons")
queryMany(q, scopes="exons_hg19")
query(q[[1]])
query(q[1])
query(q[2])
queryVariant(q)
q
queryVariant(q[1])
queryVariant(q[2])
queryVariant(q)
queryVariant(q)$cosmic
x <- queryVariant(q)
query(q[1])
?query
?system.file
check()
setwd("~/sulab/repos/myvariant.R/vignettes")
check()
Sweave("myvariant.Rnw")
utils::Sweave("myvariant.Rnw")
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
utils::Sweave("myvariant.Rnw")
rsid <- getVcf(system.file("extdata", package="myvariant", "dbsnp_mini.vcf"))$rsID
rsid
queryVariants(rsid, scopes="dbsnp.rsid", fields="dbnsfp")
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
queryVariants(rsid, scopes="dbsnp.rsid", fields="dbnsfp")
queryVariants(rsid, scopes="dbsnp.rsid", fields="dbsnp")
queryVariants(rsid, scopes="dbsnp.rsid", fields="clinvar")
queryVariants(rsid, scopes="dbsnp.rsid", fields="cosmic")
queryVariants(rsid, scopes="dbsnp.rsid", fields="all")
res <- queryVariants(rsid, scopes="dbsnp.rsid", fields="all")
res$wellderly.vartype
queryVariants(rsid, scopes="dbsnp.rsid", fields="wellderly")
res <- queryVariants(rsid, scopes="dbsnp.rsid", fields="wellderly")
subset(res, !is.na(wellerly.vartype))
subset(res, !(is.na(wellerly.vartype)))
subset(res, !(is.na(wellderly.vartype)))
subset(res, !is.na(wellderly.vartype))
utils::Sweave("myvariant.Rnw")
res <- queryVariants(rsid, scopes="dbsnp.rsid")
subset(res, !is.na(wellderly.vartype))$wellderly.vartype
res$query
utils::Sweave("myvariant.Rnw")
utils::Sweave("myvariant.Rnw")
utils::Sweave("myvariant.Rnw")
utils::Sweave("myvariant.Rnw")
utils::Sweave("myvariant.Rnw")
queryVariant(q="rs58991260", fields="evs")$hits
queryVariant(q="rs58991260")$hits
queryVariant(q="rs58991260", return.as="list")
queryVariant(q="rs58991260", return.as="records")
queryVariant(q="rs58991260", return.as="records")$hits
queryVariant(q="rs58991260", return.as="records")[[1]]
queryVariant(q="rs58991260", return.as="records")[[1]]$hits
queryVariant(q="rs58991260", return.as="records")[[1]]$hits[[1]]
queryVariant(q="rs58991260", fields="dbsnp.flags")$hits
utils::Sweave("myvariant.Rnw")
queryVariant(q="rs58991260", fields="dbsnp.flags", return.as="records")
queryVariant(q="rs58991260", fields="dbsnp.flags", return.as="records")[[1]]$hits[[1]]
queryVariant(q="rs58991260", fields="dbsnp.flags", return.as="records")
v <- getVcf("../inst/extdata//dbsnp_mini.vcf")
indels <- getIndels(v)
indels
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
indels <- getIndels(v)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
indels <- getIndels(v)
indels
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
indels
indels <- getIndels(v)
indels
?merge
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
indels <- getIndels(v)
nrow(v)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
indels <- getIndels(v)
indels
?transform
ins <- getIns(v)
ins
v
sort(c("chr3:g.56771251A>C", "chr1:g.881627G>A", "chr8:g.62416074G>A",
"chr1:g.887560A>C", "chr12:g.31477822G>A", "chr1:g.888639T>C"))
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
queryVariant(q="dbnsfp.genename:MLL2", fields="cadd.phred,cadd.consequence")
fields=c("cadd.phred", "cadd.consequence")
.collapse(fields)
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
