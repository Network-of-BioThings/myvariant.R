source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("mygene")
pwd
pwd()
setwd("~/avera")
ls
ls()
.Internal(ls(envir, all.names, sorted))
biocLite
.biocLiteInstall
biocLite("BaseSpaceR")
library(BaseSpaceR)
biocLite()
remove.packages("myvariant")
library(devtools)
install_github("genomicsclass/GSE5859Subset")
library(GSE5859Subset)
data(GSE5859Subset)
sampleInfo
head(geneAnnotation)
sum(geneAnnotation$CHR=="chrY")
sum(geneAnnotation$CHR==chrY)
geneAnnotation$CHR=="chrY"
sum(geneAnnotation$CHR==chrY)
sum(geneAnnotation$CHR=="chrY")
sum(geneAnnotation$CHR=="chrY"m na.rm=T)
sum(geneAnnotation$CHR=="chrY", na.rm=T)
head(geneExpression)
geneAnnotation
sampleInfo
geneExpression
head(geneExpression)
head(geneExpression$GSM136727.CEL.gz)
head(geneExpression['GSM136727.CEL.gz'])
geneExpression['GSM136727.CEL.gz']
geneAnnotation
head(geneAnnotation)
geneAnnotation$SYMBOL=="ARPC1A"
subset(geneAnnotation, SYMBOL=="ARPC1A")
subset(geneAnnotation, SYMBOL=="ARPC1A")$PROBEID
p <- subset(geneAnnotation, SYMBOL=="ARPC1A")$PROBEID
sampleInfo
sampleInfo$date=="2005-06-10"
sampleInfo$date=="2005-06-10"['date']
sampleInfo[sampleInfo$date=="2005-06-10"]
sampleInfo[date=="2005-06-10"]
sampleInfo["date"=="2005-06-10"]
s <- "GSM136727.CEL.gz"
geneExpression
is(geneExpression)
geneExpression[,s]
geneExpression[,GSM136727.CEL.gz]
geneExpression[,"GSM136727.CEL.gz"]
geneExpression["GSM136727.CEL.gz",]
geneExpression["GSM136727.CEL.gz"]
geneExpression[,"GSM136727.CEL.gz"]
geneExpression[,"GSM136727.CEL.gz"]==p
geneExpression[geneExpression[,"GSM136727.CEL.gz"]==p]
subset(geneExpression, [,"GSM136727.CEL.gz"]==p)
subset(geneExpression, "GSM136727.CEL.gz"==p)
subset(geneExpression, PROBEID==p)
subset(geneExpression, "PROBEID" ==p)
subset(geneExpression, "PROBEID" == p)
i = which(geneAnnotation$SYMBOL=="ARPC1A")
j = which(sampleInfo$date=="2005-06-10")
geneExpression[i,j]
i
j
setwd("~/sulab/repos/myvariant.R/vignettes")
utils::Sweave("myvariant.Rnw")
install_github(username = "Network-of-biothings", repo = "myvariant.R")
utils::Sweave("myvariant.Rnw")
file.path <- system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
file.path
file.path <- system.file("extdata", "dbsnp_mini.vcf", package="myvariant.R")
file.path
file.path <- system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
file.path
system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
library(myvariant)
system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
remove.packages("myvariant")
install_github("Network-of-BioThings/myvariant.R")
system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
system.file(dbsnp_mini.vcf", package="myvariant")
system.file("dbsnp_mini.vcf", package="myvariant")
?system.file
system.file(package="myvariant")
system.file("dbsnp_mini.vcf", package="myvariant")
system.file("dbsnp_mini.vcf")
library(myvariant)
system.file("dbsnp_mini.vcf")
system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
system.file("extdata", "dbsnp_mini.vcf", package="myvariant.R")
system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
set.seed(1)
library(downloader)
url = "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename = "femaleControlsPopulation.csv"
if (!file.exists(filename)) download(url,destfile=filename)
population = read.csv(filename)
pvals <- replicate(1000,{
control = sample(population[,1],12)
treatment = sample(population[,1],12)
t.test(treatment,control)$p.val
})
head(pvals)
hist(pvals)
install.packages("donwloader")
install.packages("downloader")
set.seed(1)
library(downloader)
url = "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename = "~/sulab/femaleControlsPopulation.csv"
if (!file.exists(filename)) download(url,destfile=filename)
population = read.csv(filename)
pvals <- replicate(1000,{
control = sample(population[,1],12)
treatment = sample(population[,1],12)
t.test(treatment,control)$p.val
})
head(pvals)
hist(pvals)
length(pvals)
sum(pvals<0.05)
sum(pvals<0.01)
cases = rnorm(10,30,2)
controls = rnorm(10,30,2)
t.test(cases,controls)
?replicate
set.seed(100)
pvals<- replicate(20,{
cases = rnorm(10,30,2)
controls = rnorm(10,30,2)
t.test(cases,controls)$p.value
})
sum(pvals<0.05)
set.seed(100)
pvals<- replicate(1000, {replicate(20,{
cases = rnorm(10,30,2)
controls = rnorm(10,30,2)
t.test(cases,controls)$p.value
})})
sum(pvals<0.05)
pvals<0.05
pvals[pvals<0.05]
plot(pvals[pvals<0.05])
mean(pvals[pvals<0.05])
1007/20000
set.seed(100)
B = 1000
plessthan = replicate(B,{
pvals = replicate(20,{
cases = rnorm(10,30,2)
controls = rnorm(10,30,2)
t.test(cases,controls)$p.value
})
sum(pvals<=0.05)
})
table(plessthan) ##just for illustration
mean(plessthan)
alphas <- seq(0,0.25,0.01)
alphas
par(mfrow=c(2,2))
for(m in c(2,10,100,1000)){
plot(alphas,alphas/m - (1-(1-alphas)^(1/m)),type="l")
abline(h=0,col=2,lty=2)
}
pvals <- runif(8793,0,1)
pvals
?runif
?set.seed
set.seed(1)
B <- 10000
m <- 8793
alpha <- 0.05
pvals <- matrix(runif(B*m,0,1),B,m)
k <- alpha/m
mistakes <- rowSums(pvals<k)
mean(mistakes>0)
library(genefilter)
?rowttests
install.packages("genefilter")
biocLite("genefilter")
library(genefilter)
?rowttests
ttests <- rowttests(geneExpression)
ttests
ttests$p.value
sum(ttests$p.value>0.05)
sum(ttests$p.value<0.05)
g <- factor(sampleInfo$group)
ttests <- rowttests(geneExpression, g)$p.value
ttests
sum(ttests>0.05)
ttests <- rowttests(geneExpression, g)$p.value
sum(ttests<0.05)
p <- sum(ttests<0.05)
sum(ttests<0.05*p)
sum(ttests<0.05/length(pvals))
sum(ttests<0.05/length(ttests))
g = factor(sampleInfo$group)
pvals = rowttests(geneExpression,g)$p.value
fdr = p.adjust(pvals,method="fdr")
fdr
sum(fdr<0.05)
source("http://www.bioconductor.org/biocLite.R")
biocLite("SpikeInSubset")
install.packages("caret")
system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
remove.packages("myvariant")
install_github("Network-of-BioThings/myvariant.R")
system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
setwd("~/sulab/repos/myvariant.R/vignettes")
utils::Sweave("myvariant.Rnw")
res <- queryVariants(q=rsids, scopes="dbsnp.rsid", fields="all")
res
subset(res, !is.na(wellderly.vartype))$query
subset(res, !is.na(wellderly.vartype))$query
res
res <- queryVariants(q=rsids, scopes="dbsnp.rsid", fields="all")
names(res)
res
res <- queryVariants(q=rsids, scopes="dbsnp.rsid")
subset(res, !is.na(wellderly.vartype))$query
subset(res, !is.na(wellderly.vartype))
subset(res, !is.na(res$wellderly.vartype))
DataFrame(res)
library(IRanges)
subset(res, !is.na(res$wellderly.vartype))
utils::Sweave("myvariant.Rnw")
check()
check()
check()
library(IRanges)
check()
check()
check()
check()
check()
check()
check()
file.path <- system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
file.path
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
vcf <- getVcf(file.path)
getAll(vcf)
exists(vcf[c("CHROM", "POS", "rsID", "REF", "ALT")])
vcf[c("CHROM", "POS", "rsID", "REF", "ALT")]
exists(all(vcf[c("CHROM", "POS", "rsID", "REF", "ALT")]))
?stopifnot
all(vcf[c("CHROM", "POS", "rsID", "REF", "ALT")])
exists(all(vcf[c("CHROM", "POS", "rsID", "REF", "ALT")]))
getIns(vcf)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
getIns(vcf)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
getAll(vcf)
head(vcf)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
getAll(vcf)
head(vcf)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
head(vcf)
getAll(vcf)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
getAll(vcf)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
getAll(vcf)
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
getAll(vcf)
check()
check()
library(caret)
install.packages("caret")
library(caret)
install.packages("gtools")
library(caret)
?preProcess
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
inTrain <- createDataPartition((y=spam$type, p=0.75, list=F))
inTrain <- createDataPartition(y=spam$type, k=10, p=0.75, list=F)
inTrain <- createDataPartition(y=spam$type, p=0.75, list=F)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
dim(training)
dim(testing)
folds <- createFolds(y=sapm$type, k=10, list=T, returnTrain=T)
folds <- createFolds(y=spam$type, k=10, list=T, returnTrain=T)
sapply(folds, length)
folds[[1]][1:10]
folds[[1]]
training
?set.seed
library(ggplot2)
install.packages("ISLR")
data(Wage)
summary(spam)
summary(res)
qplot(spam, colour=all, data=training, geom="density")
qplot(spam, colour=type, data=training, geom="density")
training
library(MyVariant)
library(myvariant)
check()
check()
check()
check()
check()
check()
file.path <- system.file("extdata", "dbsnp_mini.vcf", package="myvariant")
vcf <- getVcf(file.path)
rsids <- vcf$rsID
res <- queryVariants(q=rsids, scopes="dbsnp.rsid", fields="all")
res
subset(res, !is.na(wellderly.vartype))$query
check()
library(kernlab)
data(spam)
spam$capitalAveSq <- spam$capitalAve^2
wellerly.vartype %in% names(res)
wellerly.vartype %in% colnames(res)
res
res$wellerly.vartype %in% colnames(res)
wellderly.vartype %in% colnames(res)
"wellderly.vartype" %in% colnames(res)
check()
install_github("Network-of-BioThings/myvariant.R")
vignette("myvariant")
getVariants(c("chr1:g.881627G>A", "chr1:g.887560A>C", "chr1:g.888639T>C",
"chr12:g.31477822G>A", "chr3:g.56771251A>C", "chr8:g.62416074G>A"),
fields="cadd.consequence")
build()
build()
remove.packages("myvariant")
install.packages("~/sulab/repos/myvariant_0.99.tar.gz", repos = NULL, type = "source")
vignette("myvariant")
utils::Sweave("myvariant.Rnw")
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
queryVariant(q="dbnsfp.genename:MLL2", fields="cadd.phred,cadd.consequence")
library(myvariant)
queryVariant(q="dbnsfp.genename:MLL2", fields="cadd.phred,cadd.consequence")
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
source('~/sulab/repos/myvariant.R/R/utils.R')
source('~/sulab/repos/myvariant.R/R/readHGVS.R')
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
source('~/sulab/repos/myvariant.R/R/MyVariant.R')
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
queryVariant(q="dbnsfp.genename:MLL2", fields=c("cadd.phred", "cadd.consequence"))
Sweave("myvariant.Rnw")
build()
library(UsingR)
install.packages("UsingR")
library(UsingR)
data(father.son)
x <- father.son$sheight
n <- length(x)
B <- 10000
x
n
B
resamples <- matrix(sample(x, n * B, replace=T), B , n)
resampledMedians <- apply(resamples, 1, median)
resamples
sd(medians)
medians <- apply(resamples, 1, median)
sd(medians)
quantile(medians, c(0.025, 0.975))
g = ggplot(data.frame(medians=medians, aes(x=medians)))
g = ggplot(data.frame(medians=medians), aes(x=medians))
g = g + geom_histogram(color="black", fill="lightblue", binwidth=0.05)
g
