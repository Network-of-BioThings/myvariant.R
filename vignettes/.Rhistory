subset(norm, CHROM=="chr12")
apply(norm, 1, is)
apply(norm, 1, as.vector)
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind.fill, apply(pass, 1, .split.rows(i)))
}
else{return()}
apply(new.df, 1, as.vector)
}
norm <- .normalize.subs(vcf)
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
apply(new.df, 1, as.vector)
}
norm <- .normalize.subs(vcf)
norm
readSnps(norm)
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
data.frame(apply(new.df, 1, as.vector))
}
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
data.frame(apply(new.df, 1, as.vector))
}
norm <- .normalize.subs(vcf)
norm
T(norm)
t(norm)
norm <- t(norm)
norm
names(norm) <- c("CHROM", "POS", "REF", "ALT")
norm
names(norm) <- c("CHROM", "POS", "REF", "ALT")norm
norm
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
t(data.frame(apply(new.df, 1, as.vector)))
}
norm <- .normalize.subs(vcf)
norm
names(norm)
data.frame(norm)
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
new.df <- data.frame(t(data.frame(apply(df, 1, as.vector))))
names(df) <- c("CHROM", "POS", "REF", "ALT")
}
norm <- .normalize.subs(vcf)
norm
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
new.df <- data.frame(t(data.frame(apply(df, 1, as.vector))))
names(new.df) <- c("CHROM", "POS", "REF", "ALT")
}
norm
norm <- .normalize.subs(vcf)
norm
## normalizes rows where ALT == "GA,G" (multiple ALT values)
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
new.df <- t(apply(df, 1, as.vector))
#names(new.df) <- c("CHROM", "POS", "REF", "ALT")
new.df
}
norm <- .normalize.subs(vcf)
norm
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
new.df <- data.frame(t(apply(df, 1, as.vector)))
names(new.df) <- c("CHROM", "POS", "REF", "ALT")
new.df
}
norm <- .normalize.subs(vcf)
norm
readSnps(norm)
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
new.df
}
norm <- .normalize.subs(vcf)
norm
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind, apply(pass, 1, .split.rows))
}
else{return()}
new.df
}
norm <- .normalize.subs(vcf)
norm
readSnps(norm)
.normalize.subs <- function(vcf){
subs <- subset(vcf, grepl(",", ALT))
pass <- subset(subs, FILTER =="PASS")
if(nrow(pass) > 0){
new.df <- do.call(rbind.fill, apply(pass, 1, .split.rows))
}
else{return()}
new.df
}
norm <- .normalize.subs(vcf)
readSnps(norm)
readSnps <- function(vcf){
subs <- subset(vcf, !grepl(",", ALT))
subs <- subset(subs, nchar(as.vector(REF)) == nchar(as.vector(ALT)))
snps <- subset(subs, nchar(as.vector(REF)) == 1)
if(nrow(snps) > 0){
hgvs <- data.frame("query"=paste(snps$CHROM, ":g.", snps$POS, snps$REF, ">", snps$ALT, sep=""),
"type"=rep("snp", nrow(snps)),
"pos"=paste(snps$CHROM, ":", snps$POS, "-", snps$POS, sep=""))
}
else {return()}
hgvs
}
readSnps(norm)
pos <- readSnps(norm)$pos
pos
library(mygene)
genes <- lapply(pos, query)
genes$hits$entrezgene
genes$hits
genes
pos
snp <- readSnps(vcf)
snp$pos
pos
nrow(snp)
norm
data.frame(lapply(norm, as.vector))
norm1 <- data.frame(lapply(norm, as.vector))
readSnps(norm1)
readSnps <- function(vcf){
subs <- subset(vcf, !grepl(",", ALT))
subs <- subset(subs, nchar(REF) == nchar(ALT))
snps <- subset(subs, nchar(REF) == 1)
if(nrow(snps) > 0){
hgvs <- data.frame("query"=paste(snps$CHROM, ":g.", snps$POS, snps$REF, ">", snps$ALT, sep=""),
"type"=rep("snp", nrow(snps)),
"pos"=paste(snps$CHROM, ":", snps$POS, "-", snps$POS, sep=""))
}
else {return()}
hgvs
}
readSnps(norm1)
readSnps <- function(vcf){
subs <- subset(vcf, !grepl(",", ALT))
subs <- subset(subs, nchar(as.vector(REF)) == nchar(as.vector(ALT)))
snps <- subset(subs, nchar(as.vector(REF)) == 1)
if(nrow(snps) > 0){
hgvs <- data.frame("query"=paste(snps$CHROM, ":g.", snps$POS, snps$REF, ">", snps$ALT, sep=""),
"type"=rep("snp", nrow(snps)),
"pos"=paste(snps$CHROM, ":", snps$POS, "-", snps$POS, sep=""))
}
else {return()}
hgvs
}
readSnps(norm1)
?gsub
lapply(norm1$query, function(i) gsub(" ", ""))
lapply(norm1$query, function(i) gsub(" ", "", i))
.trim <- function (x) gsub("^\\s+|\\s+$", "", x)
readSnps <- function(vcf){
subs <- subset(vcf, !grepl(",", ALT))
subs <- subset(subs, nchar(as.vector(REF)) == nchar(as.vector(ALT)))
snps <- subset(subs, nchar(as.vector(REF)) == 1)
if(nrow(snps) > 0){
hgvs <- data.frame("query"=paste(snps$CHROM, ":g.", snps$POS, snps$REF, ">", snps$ALT, sep=""),
"type"=rep("snp", nrow(snps)),
"pos"=paste(.trim(snps$CHROM), ":", .trim(snps$POS), "-", .trim(snps$POS), sep=""))
}
else {return()}
hgvs
}
readSnps(norm)
s <- readSnps(norm)
lapply(s$pos, query)
pos
z <- "chr11: 48239182- 48239182"
.trim(z)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- readHgvs(vcf)
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
nrow(vcf)
names(vcf)
getHgvs <- function(vcf){
vcf <- subset(vcf, vcf['FILTER']=="PASS")
snps <- readSnps(vcf)
dels <- readDels(vcf)
ins <- readIns(vcf)
indels <- readIndels(vcf)
normalized<- getHgvs(.normalize.subs(vcf))
hgvs <- do.call(rbind.fill, list(snps, dels, ins, indels,normalized))
hgvs
}
names(vcf)
hgvs <- getHgvs(vcf)
[.data.frame`(vcf, "FILTER")
`[.data.frame`(vcf, "FILTER")
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
snp
.trim(snp)
sno <- head(snp)
sno
lapply(sno, lapply, .trim)
data.frame(lapply(sno, lapply, .trim))
t(data.frame(lapply(sno, lapply, .trim)))
nrow(vcf)
hgvs <- getHgvs(vcf)
unique(vcf$FILTER)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/.active-rstudio-document')
hgvs <- getHgvs(vcf)
source('~/.active-rstudio-document')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
hgvs
norm
subset(norm, REF == ALT)
subset(norm, REF != ALT)
subset(norm, nchar(REF) == nchar(ALT))
subset(vcf, nchar(REF) == nchar(ALT))
setwd("~/Documents/Su_Lab/Repositories/myvariant.R/vignettes")
head(vcf)
subs <- subset(vcf, !grepl(",", ALT))
subs
subs <- subset(vcf, grepl(",", ALT))
subs
norm
snps <- readSnps(vcf)
head(snps)
snps <- readSnps(norm)
snos
snps
norm <- .normalize.subs(vcf)
norm
readSnps(norm)
hgvs <- getHgvs(vcf)
head(hgvs)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
library(myvariant)
file.path <- "~/Documents/Su_Lab/myvariant.info/exomes/kabuki/vcf/"
vcf.files <- paste(file.path, list.files(file.path), sep="")
vcf <- getVcf(vcf.files[[1]])
head(vcf)
norm <- .normalize.subs(vcf)
norm
readSnps(norm)
readIns(norm)
readDels(norm)
is(vcf)==is(norm)
is(vcf)
class(vcf)
class(norm)
DataFrame(vcf)
DataFrame(norm)
nchar(factor(letter))
nchar(factor(letters))
library(dplyr)
install.packages("dplyr")
?data.frame
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
?read.csv
hgvs <- getHgvs(vcf)
head(vcf)
DataFrame(vcf)
DataFrame(norm)
DataFrame(data.frame(norm, stringsAsFactors=FALSE))
norm[] <- lapply(norm, as.character)
DataFrame(norm)
.normalize.subs <- function(vcf){
split.alt <- strsplit(vcf$ALT, ",")
vcf <- vcf[rep(seq(nrow(vcf)), elementLengths(split.alt)),]
vcf$ALT <- unlist(split.alt)
return(vcf)
}
.normalize.subs(vcf)
.normalize.subs(head(vcf))
.normalize.subs(head(norm))
seq(0)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
hgvs
unique(hgvs$type)
tail(norm)
"chr12:g.7014962A>C" %in% hgvs$query
tail(hgvs)
tail(subset(hgvs, type == "snp"))
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
file.path <- "~/Documents/Su_Lab/myvariant.info/exomes/kabuki/vcf/"
vcf.files <- paste(file.path, list.files(file.path), sep="")
hgvs <- getHgvs(getVcf(vcf.files[[1]]))
"chr12:g.7014962A>C" %in% hgvs$query
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(getVcf(vcf.files[[1]]))
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(getVcf(vcf.files[[1]]))
head(hgvs)
"chr12:g.7014962A>C" %in% hgvs$query
subset(hgvs, POS==7014962)
subset(hgvs, abs(POS-7014962)<5
)
vcf <- getVcf(vcf.files[[1]])
subset(vcf, abs(POS-7014962)<5)
hgvs <- getHgvs(getVcf(vcf.files[[1]]))
nrow(vcf)
head(vcf)
vcf[c("CHROM", "POS")]
vcf[c("CHROM", "POS")] %>% unique
vcf[c("CHROM", "POS")] %>% unique %>% nrow
hgvs[c("CHROM", "POS")] %>% unique %>% nrow
subset(vcf, abs(POS-7014962)<5)
subset(readSnps(vcf), abs(POS-7014962)<5)
readSnps(vcf)
snps <- readSnps(vcf)
snps %>% subset(abs(POS-7014962)<5)
snps %>% subset(CHROM == "chr12")
snps %>% subset(abs(POS-7014962)<500)
snps %>% subset(abs(POS-7014962)<5000)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
snps <- readSnps(vcf)
snps %>% subset(abs(POS-7014962)<5000)
snps %>% subset(abs(POS-7014962)<5)
snps <- getHgvs(vcf)
hgvs <- getHgvs(vcf)
hgvs %>% subset(abs(POS-7014962)<5)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
readSnps(vcf)
snps <- readSnps(vcf)
dels <- readDels(vcf)
ins <- readIns(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
ins <- readIns(vcf)
ins
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
ins <- readIndels(vcf)
indels <- readIndels(vcf)
indels
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
indels
indels <- readIndels(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
indels <- readIndels(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
indels <- readIndels(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
indels <- readIndels(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
indels <- readIndels(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
indels <- readIndels(vcf)
?rbind
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
?rbind
indels <- readIndels(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
indels <- readIndels(vcf)
hgvs <- getHgvs(vcf)
readDels(vcf)
hgvs <- getHgvs(vcf)
file.path <- "~/Documents/Su_Lab/myvariant.info/exomes/kabuki/vcf/"
vcf.files <- paste(file.path, list.files(file.path), sep="")
vcf <- getVcf(vcf.files[[1]])
hgvs <- getHgvs(vcf)
vars <- getVariants(hgvs$query[1:1000])
vars
subset(vars, !is.na(dbsnp.dbsnp_build))
dbsnp <- subset(vars, !is.na(dbsnp.dbsnp_build))
nrow(dbsnp)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
file.path <- "~/Documents/Su_Lab/myvariant.info/exomes/kabuki/vcf/"
vcf.files <- paste(file.path, list.files(file.path), sep="")
vcf <- getVcf(vcf.files[[1]])
hgvs <- getHgvs(vcf)
vcf <- getVcf(vcf.files[[1]])
hgvs <- getHgvs(vcf)
file.path <- "~/Documents/Su_Lab/myvariant.info/exomes/kabuki/vcf/"
vcf.files <- paste(file.path, list.files(file.path), sep="")
vcf <- getVcf(vcf.files[[1]])
hgvs <- getHgvs(vcf)
remove.packages("myvariant")
install_github("Network-of-Biothings/myvariant.R")
library:(myvariant)
library(myvariant)
vcf <- getVcf(vcf.files[[1]])
hgvs <- getHgvs(vcf)
dels <- readDels(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
dels <- readDels(vcf)
hgvs <- getHgvs(vcf)
.normalize.subs <- function(vcf){
if (nrow(vcf) == 0)
return(vcf)
split.alt <- strsplit(vcf$ALT, ",")
vcf <- vcf[rep(seq(nrow(vcf)), elementLengths(split.alt)),]
vcf$ALT <- unlist(split.alt)
vcf
}
nrow(.normalize.subs(vcf))
nrow(vcf)
normal <- subset(vcf, !grepl(",", ALT))
normal
normal <- subset(vcf, grepl(",", ALT))
normal
normal$ALT
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
hgvs <- do.call(rbind.fill, list(snps, dels, ins))#, indels))
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
remove.packages("myvariant")
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
head(hgvs)
nrow(hgvs)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
?transform
library(myvariant)
?readSnps
readSnps
file.path <- "~/Documents/Su_Lab/myvariant.info/exomes/kabuki/vcf/"
vcf.files <- paste(file.path, list.files(file.path), sep="")
vcf <- getVcf(vcf.files[[1]])
hgvs <- getHgvs(vcf)
source('~/.active-rstudio-document')
hgvs <- getHgvs(vcf)
source('~/Documents/Su_Lab/Repositories/myvariant.R/R/readHGVS.R')
hgvs <- getHgvs(vcf)
